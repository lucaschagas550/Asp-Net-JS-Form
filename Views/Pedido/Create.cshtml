@model PedidoViewModel

@{
    ViewData["Title"] = "Create Pedido";
}

<!-- Modal para Adicionar Item -->
<div class="modal fade" id="itemModal" tabindex="-1" role="dialog" aria-labelledby="itemModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Adicionar Item</h1>
                <button id="closeModalButton" type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"
                        onclick="limparValoresModal('itemModal')"></button>
            </div>
            <div class="modal-body">

                <div class="form-group">
                    <label for="itemDescricao">Descrição</label>
                    <input type="text" class="form-control" id="itemDescricao" />
                    <div class="text-danger" id="itemDescricaoError" style="display:none;"></div>
                </div>

                <div class="form-group">
                    <label for="itemQuantidade">Quantidade</label>
                    <input type="number" class="form-control" id="itemQuantidade" />
                    <div class="text-danger" id="itemQuantidadeError" style="display:none;"></div>
                </div>

                <div class="form-group">
                    <label for="itemPreco">Preço</label>
                    <input class="form-control money" id="itemPreco" />
                    <div class="text-danger" id="itemPrecoError" style="display:none;"></div>
                </div>

                <div class="form-group">
                    <label for="itemData">Data</label>
                    <input class="form-control date-field" type="date" id="itemData" />
                    <div class="text-danger" id="itemDataError" style="display:none;"></div>
                </div>

                <div class="form-check">
                    <label class="form-check-label" for="itemDesconto">Desconto</label>
                    <input class="form-check-input" type="checkbox" id="itemDesconto" />
                    <div class="text-danger" id="itemDataDescontoError" style="display:none;"></div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"onclick="limparValoresModal('itemModal')">Cancelar</button>
                <button type="button" class="btn btn-primary" id="saveItemButton">Salvar</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal para Editar Item -->
<div class="modal fade" id="editItemModal" tabindex="-1" role="dialog" aria-labelledby="editItemModalLabel"
     aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Editar Item</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">

                <div class="form-group">
                    <label for="editItemDescricao">Descrição</label>
                    <input type="text" class="form-control" id="editItemDescricao" />
                    <div class="text-danger" id="editItemDescricaoError" style="display:none;"></div>
                </div>

                <div class="form-group">
                    <label for="editItemQuantidade">Quantidade</label>
                    <input type="number" class="form-control" id="editItemQuantidade" />
                    <div class="text-danger" id="editItemQuantidadeError" style="display:none;"></div>
                </div>

                <div class="form-group">
                    <label for="editItemPreco">Preço</label>
                    <input class="form-control money" id="editItemPreco" />
                    <div class="text-danger" id="editItemPrecoError" style="display:none;"></div>
                </div>

                <div class="form-group">
                    <label for="editItemData">Data</label>
                    <input class="form-control date-field" type="date" id="editItemData" />
                    <div class="text-danger" id="editItemDataError" style="display:none;"></div>
                </div>

                <div class="form-check">
                    <label class="form-check-label" for="editItemDesconto">Desconto</label>
                    <input class="form-check-input" type="checkbox" id="editItemDesconto" />
                    <div class="text-danger" id="editItemDescontoError" style="display:none;"></div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="updateItemButton">Atualizar</button>
            </div>
        </div>
    </div>
</div>

<h1>Criar Pedido</h1>

<form asp-action="Create" method="post">

    <div class="form-group">
        <label asp-for="NomeCliente"></label>
        <input asp-for="NomeCliente" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="DataPedido"></label>
        <input asp-for="DataPedido" class="form-control" />
    </div>

    <div class="mt-5">
        <div class="row">
            <div class="col-sm-6 text-start">
                <h3>Itens</h3>
            </div>

            <div class="col-sm-6 text-end">
                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#itemModal">
                    Adicionar Item
                </button>
            </div>
        </div>
    </div>
    <table class="table text-center">
        <thead>
            <tr>
                <th>Descrição</th>
                <th>Quantidade</th>
                <th>Preço</th>
                <th>Data</th>
                <th>Desconto</th>
                <th>Ações</th>
            </tr>
        </thead>
        <tbody id="itens-table">
            @for (int i = 0; i < Model.Itens.Count; i++)
            {
                @*""Itens"" porque na model eh referente a lista, assim existe o mapeamento"*@
                <tr>
                    <td>
                        <input name="Itens[@i].Descricao" value="@Model.Itens[i].Descricao" class="readonly-input-center" readonly />
                    </td>
                    
                    <td>
                        <input name="Itens[@i].Quantidade" value="@Model.Itens[i].Quantidade" class="readonly-input-center" readonly />
                    </td>

                    <td>
                        <div class="row">

                            <div class="col-sm-6 text-end">
                                <span> R$ </span>
                            </div>
                            <div class="col-sm-6 text-start">
                                <input type="text" name="Itens[@i].Preco" value="@Model.Itens[i].Preco" class="readonly-input" readonly />
                            </div>

                        </div>
                    </td>

                    <td>
                        <input name="Itens[@i].Data" value="@Model.Itens[i].Data.ToString("yyyy-MM-dd")" type="date" class="readonly-input-center no-calendar" />
                    </td>

                    <td>
                        <input name="Itens[@i].Desconto" type="checkbox" class="readonly-input"
                               value="@(Model.Itens[@i].Desconto ? "true" : "false")" @(Model.Itens[@i].Desconto ? "checked" :
                           "") />
                    </td>
                    
                    <td>
                        <button type="button" class="btn btn-warning" onclick="editItem(this)">Editar</button>
                        <button type="button" class="btn btn-danger" onclick="removeItem(this)">Remover</button>
                    </td>

                </tr>

                @* Eh possivel alterar o valor do checkbox mas alem disso vai precisar de outra iteracao no JS para mudar
            a palavra de Com Desconto para Sem Desconto, o mesmo para um icone por exemplo
            @{
            var resultado = Model.Itens[i].Desconto == true ? "Com desconto" : "Sem Desconto";
            }
            @resultado *@
            }
        </tbody>
    </table>

    <div class="row mt-4">
        <div class="col-sm-12 text-end">
            <button type="submit" class="btn btn-success">Salvar</button>
        </div>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>

        $(document).ready(function () {

            // Desabilita a digitação nos campos de data, permitindo apenas a seleção via calendário
            $('.date-field').on('keypress keydown keyup', function (e) {
                e.preventDefault();
            });

            //Btn de add novo item na tabela
            $('#saveItemButton').click(function () {
                var descricao = $('#itemDescricao').val();
                var quantidade = $('#itemQuantidade').val();
                var preco = $('#itemPreco').val();
                var data = $('#itemData').val();
                var desconto = $('#itemDesconto').is(':checked'); // Verifica se o checkbox está marcado


                var isValid = true;

                if (!descricao) {
                    $('#itemDescricaoError').text('Campo obrigatório.').show();
                    isValid = false;
                } else {
                    $('#itemDescricaoError').hide();
                }

                if (!quantidade) {
                    $('#itemQuantidadeError').text('Campo obrigatório.').show();
                    isValid = false;
                } else {
                    $('#itemQuantidadeError').hide();
                }

                if (!preco) {
                    $('#itemPrecoError').text('Campo obrigatório.').show();
                    isValid = false;
                } else {
                    $('#itemPrecoError').hide();
                }

                if (isValid) {
                    var index = $('#itens-table tr').length;

                    // Formatação da data no formato yyyy-MM-dd
                    var formattedData = new Date(data).toISOString().split('T')[0];

                    var row = '<tr>' +
                        '<td>' +
                            '<input name="Itens[' + index + '].Descricao" class="readonly-input-center" value="' + descricao + '" readonly /></td>' +
                        '<td>' + 
                            '<input name="Itens[' + index + '].Quantidade" class="readonly-input-center" value="' + quantidade + '" readonly /></td>' +
                        '<td>' +
                            '<div class="row">' +
                                '<div class="col-sm-6 text-end">' +
                                    '<span>R$</span>' +
                                '</div>' +
                                '<div class="col-sm-6 text-start">' +
                                    '<input type="text" name="Itens[' + index + '].Preco" class="readonly-input" value="' + preco + '" readonly />' +
                                '</div>' +
                            '</div>' +
                        '<td>' + 
                            '<input name="Itens[' + index + '].Data" type="date" class="readonly-input-center no-calendar" value="' + formattedData + '" readonly /></td>' +
                        '<td>' +
                            '<input name="Itens[' + index + '].Desconto" type="checkbox" class="readonly-input-center no-calendar" value="' + (desconto ? 'true' : 'false') + '" ' + (desconto ? 'checked' : '') + ' />' +
                        '</td>' +
                        '<td>' + 
                            '<button type="button" class="btn btn-warning" onclick="editItem(this)">Editar</button>' +
                            '<button type="button" class="btn btn-danger" onclick="removeItem(this)">Remover</button>'+
                        '</td>' +
                        '</tr>';

                    $('#itens-table').append(row);

                     // Fechar o modal
                    $('#closeModalButton').click();
                }
            });

            //Btn atualizar da Modal
            $('#updateItemButton').click(function () {
                var descricao = $('#editItemDescricao').val();
                var quantidade = $('#editItemQuantidade').val();
                var preco = $('#editItemPreco').val(); // Substitui vírgula por ponto para conversão
                var data = $('#editItemData').val();
                var desconto = $('#editItemDesconto').is(':checked');

                console.log(preco);

                var isValid = true;

                if (!descricao) {
                    $('#editItemDescricaoError').text('Campo obrigatório.').show();
                    isValid = false;
                } else {
                    $('#editItemDescricaoError').hide();
                }

                if (!quantidade) {
                    $('#editItemQuantidadeError').text('Campo obrigatório.').show();
                    isValid = false;
                } else {
                    $('#editItemQuantidadeError').hide();
                }

                if (!preco) {
                    $('#editItemPrecoError').text('Campo obrigatório.').show();
                    isValid = false;
                } else {
                    $('#editItemPrecoError').hide();
                }

                if (isValid) {
                    var row = $('#itens-table tr').eq(editingRowIndex);
                    row.find('input[name$=".Descricao"]').val(descricao);
                    row.find('input[name$=".Quantidade"]').val(quantidade);
                    row.find('input[name$=".Preco"]').val(preco);
                    row.find('input[name$=".Data"]').val(data);
                    var checkbox = row.find('input[name$=".Desconto"]');

                    if (checkbox.length > 0) {
                        checkbox.prop('checked', desconto);
                        checkbox.val(desconto ? 'true' : 'false'); // Atualiza o valor do checkbox baseado no estado
                    }

                    // Fechar o modal e remover o fundo ofuscado
                    $('#editItemModal').modal('hide').on('hidden.bs.modal', function () {
                        $('body').removeClass('modal-open');
                        $('.modal-backdrop').remove();
                    });
                }
            });
        });

        var editingRowIndex;

        //Btn de Editar, chamado ao clicar no botao da tabela para editar
        function editItem(button) {
            var row = $(button).closest('tr');
            editingRowIndex = row.index();

            console.log(row.find('input[name$=".Data"]').val());

            //Pega o item da linha que tem o name terminando com .* (Alguma coisa exemplo .Data, .Preco, .Quantidade, .Desconto)
            $('#editItemDescricao').val(row.find('input[name$=".Descricao"]').val());
            $('#editItemQuantidade').val(row.find('input[name$=".Quantidade"]').val());
            $('#editItemPreco').val(row.find('input[name$=".Preco"]').val());
            $('#editItemData').val(row.find('input[name$=".Data"]').val());

            var checkbox = row.find('input[name$=".Desconto"]');
            if (checkbox.length > 0) {
                var isChecked = checkbox.is(':checked'); //Verifica se ele este checkado, true ou false
                console.log(isChecked);

                $('#editItemDesconto').prop('checked', isChecked); //Checkbox precisar alterar o valor da propriedade e nao setar o valor diretamente pelo Id do campo
            }

            $('#editItemModal').modal('show');
        }

        //Remove o item da tabela
        function removeItem(button) {
            $(button).closest('tr').remove();
            updateIndices();
        }

        // Atualiza índices da tabela para que o envio do formulário aconteça de forma correta apos remover um item
        function updateIndices() {
            $('#itens-table tr').each(function (index, row) {
                $(row).find('input').each(function () {
                    var name = $(this).attr('name');
                    if (name) {
                        var newName = name.replace(/\[\d+\]/, '[' + index + ']');
                        $(this).attr('name', newName);
                    }
                });
            });
        }


    </script>
}
